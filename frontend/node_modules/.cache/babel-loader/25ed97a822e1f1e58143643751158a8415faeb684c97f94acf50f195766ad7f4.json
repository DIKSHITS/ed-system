{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\views\\\\Typography.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardHeader, CardBody, Row, Col, Table, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Typography() {\n  _s();\n  const [facultyName, setFacultyName] = useState(\"\");\n  const [questionUploads, setQuestionUploads] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    // Fetch question uploads when facultyName changes\n    if (facultyName) {\n      fetchQuestionUploads();\n    }\n  }, [facultyName]);\n  const fetchQuestionUploads = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/api/questionUploads?facultyName=\".concat(facultyName));\n      setQuestionUploads(response.data);\n    } catch (error) {\n      console.error(\"Error fetching question uploads:\", error);\n      setQuestionUploads([]);\n    }\n  };\n  const handleCheckboxChange = (event, questionId) => {\n    if (event.target.checked) {\n      // Add the question to selectedQuestions array\n      setSelectedQuestions([...selectedQuestions, questionId]);\n    } else {\n      // Remove the question from selectedQuestions array\n      setSelectedQuestions(selectedQuestions.filter(id => id !== questionId));\n    }\n  };\n  const handleSubmit = async () => {\n    // Handle submission of selected questions\n    try {\n      setLoading(true);\n      // Send selectedQuestions to server for processing\n      console.log(\"Selected questions:\", selectedQuestions);\n      // Reset selectedQuestions array\n      setSelectedQuestions([]);\n    } catch (error) {\n      console.error(\"Error submitting selected questions:\", error);\n      setError(\"Error submitting selected questions. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"title\",\n              children: \"Select Faculty and Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                for: \"facultyName\",\n                children: \"Select Faculty:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"select\",\n                id: \"facultyName\",\n                value: facultyName,\n                onChange: e => setFacultyName(e.target.value),\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Faculty Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), questionUploads.length > 0 && /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: \"Available Question Uploads:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), questionUploads.map(upload => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Label, {\n                  check: true,\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    type: \"checkbox\",\n                    onChange: e => handleCheckboxChange(e, upload.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 25\n                  }, this), upload.questionName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)\n              }, upload.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: handleSubmit,\n              disabled: selectedQuestions.length === 0 || loading,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(Typography, \"PcQ3MfwYCqFeXgZbQPmAf0e2I0s=\");\n_c = Typography;\nexport default Typography;\nvar _c;\n$RefreshReg$(_c, \"Typography\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","CardHeader","CardBody","Row","Col","Table","FormGroup","Label","Input","Button","jsxDEV","_jsxDEV","Typography","_s","facultyName","setFacultyName","questionUploads","setQuestionUploads","selectedQuestions","setSelectedQuestions","loading","setLoading","error","setError","fetchQuestionUploads","response","get","concat","data","console","handleCheckboxChange","event","questionId","target","checked","filter","id","handleSubmit","log","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","for","type","value","onChange","e","length","map","upload","check","questionName","color","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/LMS/frontend/src/views/Typography.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nfunction Typography() {\r\n  const [facultyName, setFacultyName] = useState(\"\");\r\n  const [questionUploads, setQuestionUploads] = useState([]);\r\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch question uploads when facultyName changes\r\n    if (facultyName) {\r\n      fetchQuestionUploads();\r\n    }\r\n  }, [facultyName]);\r\n\r\n  const fetchQuestionUploads = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/api/questionUploads?facultyName=${facultyName}`);\r\n      setQuestionUploads(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching question uploads:\", error);\r\n      setQuestionUploads([]);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (event, questionId) => {\r\n    if (event.target.checked) {\r\n      // Add the question to selectedQuestions array\r\n      setSelectedQuestions([...selectedQuestions, questionId]);\r\n    } else {\r\n      // Remove the question from selectedQuestions array\r\n      setSelectedQuestions(selectedQuestions.filter(id => id !== questionId));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Handle submission of selected questions\r\n    try {\r\n      setLoading(true);\r\n      // Send selectedQuestions to server for processing\r\n      console.log(\"Selected questions:\", selectedQuestions);\r\n      // Reset selectedQuestions array\r\n      setSelectedQuestions([]);\r\n    } catch (error) {\r\n      console.error(\"Error submitting selected questions:\", error);\r\n      setError(\"Error submitting selected questions. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Card>\r\n            <CardHeader>\r\n              <h5 className=\"title\">Select Faculty and Questions</h5>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {error && <div className=\"text-danger\">{error}</div>}\r\n              <FormGroup>\r\n                <Label for=\"facultyName\">Select Faculty:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"facultyName\"\r\n                  value={facultyName}\r\n                  onChange={(e) => setFacultyName(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Faculty Name</option>\r\n                  {/* Populate options with faculty names */}\r\n                </Input>\r\n              </FormGroup>\r\n              {questionUploads.length > 0 && (\r\n                <FormGroup>\r\n                  <Label>Available Question Uploads:</Label>\r\n                  {questionUploads.map((upload) => (\r\n                    <div key={upload.id}>\r\n                      <Label check>\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          onChange={(e) => handleCheckboxChange(e, upload.id)}\r\n                        />\r\n                        {upload.questionName}\r\n                      </Label>\r\n                    </div>\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n              <Button color=\"primary\" onClick={handleSubmit} disabled={selectedQuestions.length === 0 || loading}>\r\n                Submit\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typography;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}